syntax = "proto3";
package messages;

// import "github.com/asynkron/protoactor-go/actor/protos.proto";

option go_package = "github.com/dumacp/go-ignition/pkg/messages";


message Start {}

message Stop {}

message Restart {}

message StatusRequest {
    string Sender = 1;
}
message StatusResponse {
    enum State {
        STARTED = 0;
        STOPPED = 1;
        UNKNOWN = 2;
    }
    State Status = 1;
}

message InfoCounterRequest {
    string Sender = 1;
}
message InfoCounterResponse {
    int64 Inputs = 1;
    int64 Outputs = 2;
}

message AddressCounterRequest {
    string Sender = 1;
}
message AddressCounterResponse {
    string ID = 1;
    string Addr = 2;
}

//Ignition
enum StateType {
    NA = 0;
    UP = 1;
    DOWN = 2;
}

message ValueEvent {
    StateType state = 1;
    string coord = 2;
}

message IgnitionEvent {
    ValueEvent value = 1;    
    double timeStamp = 2;
    string type = 3;
}

message PowerEvent {
    StateType value = 1; 
}


message IgnitionStateRequest {
    string sender = 1;
}
message IgnitionStateResponse {
    
    StateType State = 1;
    double TimeStamp = 2;
}

message IgnitionEventsSubscription {
    string id = 1;
    string addr = 2;
}

message IgnitionPowerSubscription {
    string id = 1;
    string addr = 2;
}

message DiscoverIgnition {
	string id = 1;
    string addr = 2;
}

message DiscoverResponseIgnition {
	string id = 1;
    string addr = 2;
    int64 timeout = 3;
}



